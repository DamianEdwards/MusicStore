@model MvcMusicStore.Models.LoginViewModel

@{
    ViewBag.Title = "Log in";
    ViewBag.ngApp = "MusicStore";
}

@section NavBarItems {

<li app-genre-menu></li>
@Html.InlineData("GenreMenuList", "GenresApi")

}

<h2>@ViewBag.Title.</h2>

<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post,
                new { @class = "form-horizontal", role = "form", novalidate = "", name = "login",
                      ng_cloak = "",
                      app_prevent_submit = "login.$invalid",
                      ng_submit = "login.submitAttempted=true" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true)

                <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.UserName, formName: "login", className: "has-error")">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.ngTextboxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ngValidationMessageFor(m => m.UserName, "login", new { @class = "field-validation-error" })
                    </div>
                </div>
                
                <div class="form-group" ng-class="{ 'has-error' : (login.submitAttempted || login.Password.$dirty) && login.Password.$invalid }">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <input type="password" id="Password" name="Password" class="form-control" ng-model="password" required />
                        <span class="field-validation-error"
                              ng-show="(login.submitAttempted || login.Password.$dirty) && login.Password.$error.required">The password field is required.</span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                
                <p>
                    @Html.ActionLink("Register", "Register") if you don't have a local account.
                </p>
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new { Action = "ExternalLogin", ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>

@section Scripts {

    <script src="~/js/angular.js"></script>
    <script src="~/js/angular-route.js"></script>
    @* TODO: This is currently all the compiled TypeScript, non-minified. Need to explore options
        for alternate loading schemes, e.g. AMD loader of individual modules, min vs. non-min, etc. *@
    <script src="~/js/site.js"></script>

}