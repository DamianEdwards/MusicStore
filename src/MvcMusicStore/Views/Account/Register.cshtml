@model MvcMusicStore.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
    ViewBag.ngApp = "MusicStore.Store";
}

@section NavBarItems {

<li app-genre-menu></li>
@Html.InlineData("GenreMenuList", "GenresApi")

}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post,
    new { @class = "form-horizontal", role = "form", novalidate = "", name = "register",
          app_prevent_submit = "register.$invalid",
          ng_submit = "register.submitAttempted=true" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary()

    <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.UserName, formName: "register", className: "has-error")">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <div class="row">
                <div class="col-md-4">
                    @Html.ngTextBoxFor(m => m.UserName, new { @class = "form-control" })
                </div>
            </div>
            @Html.ngValidationMessageFor(m => m.UserName, "register", new { @class = "help-block field-validation-error" })
        </div>
    </div>

    <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.Password, formName: "register", className: "has-error")">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <div class="row">
                <div class="col-md-4">
                    @Html.ngPasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            @Html.ngValidationMessageFor(m => m.Password, "register", new { @class = "help-block field-validation-error" })
        </div>
    </div>

    <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.ConfirmPassword, formName: "register", className: "has-error")">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <div class="row">
                <div class="col-md-4">
                    @Html.ngPasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            @Html.ngValidationMessageFor(m => m.ConfirmPassword, "register", new { @class = "help-block field-validation-error" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-default">Register</button>
        </div>
    </div>
}

@section Scripts {

<script src="~/js/angular.js"></script>
<script src="~/js/angular-route.js"></script>
@* TODO: This is currently all the compiled TypeScript, non-minified. Need to explore options
    for alternate loading schemes, e.g. AMD loader of individual modules, min vs. non-min, etc. *@
<script src="~/js/MusicStore.Store.js"></script>

}
