@model MvcMusicStore.Models.Album

<div ng-controller="MusicStore.Admin.Catalog.AlbumEditController as viewModel">
    <h2>Edit Album: {{ viewModel.album.AlbumId }}</h2>
    <hr />

    <form name="editAlbum" ng-submit="viewModel.save()">
        <div class="form-horizontal">
            <input type="hidden" value="{{ viewModel.album.AlbumId }}" />
            
            <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.GenreId, formName: "editAlbum", className: "has-error")">
                @Html.LabelFor(m => m.Genre, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @*@Html.ngDropDownListFor(m => m.GenreId, new { @class = "form-control" })*@
                    @Html.ngValidationMessageFor(m => m.GenreId, "editAlbum", new { @class = "field-validation-error" })
                </div>
            </div>

            <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.ArtistId, formName: "editAlbum", className: "has-error")">
                @Html.LabelFor(m => m.Artist, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @*@Html.ngDropDownListFor(m => m.ArtistId, new { @class = "form-control" })*@
                    @Html.ngValidationMessageFor(m => m.ArtistId, "editAlbum", new { @class = "field-validation-error" })
                </div>
            </div>

            <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.Title, formName: "editAlbum", className: "has-error")">
                @Html.LabelFor(m => m.Title, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ngTextBoxFor(m => m.Title, new { @class = "form-control", ng_model = "viewModel.album.Title" })
                    @Html.ngValidationMessageFor(model => model.Title, "editAlbum", new { @class = "field-validation-error" })
                </div>
            </div>

            <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.Price, formName: "editAlbum", className: "has-error")">
                @Html.LabelFor(m => m.Price, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ngTextBoxFor(m => m.Price, new { @class = "form-control", ng_model = "viewModel.album.Price" })
                    @Html.ngValidationMessageFor(model => model.Price, "editAlbum", new { @class = "field-validation-error" })
                </div>
            </div>

            <div class="form-group" ng-class="@Html.ngValidationClassFor(m => m.AlbumArtUrl, formName: "editAlbum", className: "has-error")">
                @Html.LabelFor(m => m.AlbumArtUrl, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ngTextBoxFor(m => m.AlbumArtUrl, new { @class = "form-control", ng_model = "viewModel.album.AlbumArtUrl" })
                    @Html.ngValidationMessageFor(model => model.AlbumArtUrl, "editAlbum", new { @class = "field-validation-error" })
                </div>
            </div>

            <div class="form-group" ng-show="viewModel.album.AlbumArtUrl && !editAlbum.AlbumArtUrl.$invalid">
                <div class="col-md-offset-2 col-md-10">
                    <img ng-src="{{ viewModel.album.AlbumArtUrl }}" alt="Album Art" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </form>

    <div>
        <a ng-href="#/albums">Back to List</a>
    </div>

</div>